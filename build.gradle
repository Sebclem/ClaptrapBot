plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
}


def versionObj = new Version(major: 0, minor: 2, revision: 0)

group = "net.broken"
archivesBaseName = "ClaptrapBot"
version = "$versionObj"

sourceCompatibility = 1.8
targetCompatibility = 1.8



jar.doFirst {
    delete "${buildDir}/libs/*"
}

jar {
//    delete "${buildDir}/libs/*"
//    baseName = 'DiscordBot'

}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
        exclude group: "org.springframework.boot", module :"spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.springframework.boot:spring-boot-starter-log4j2")
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'




    implementation 'com.sedmelluq:lavaplayer:1.3.77'
    compile 'net.dv8tion:JDA:4.2.1_266'
    compile group: 'org.json', name: 'json', version: '20210307'
    compile 'org.springframework.security:spring-security-web:5.5.0'
//     JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
    }
    implementation(platform("org.apache.logging.log4j:log4j-bom:2.17.1"))
//     Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile 'org.reflections:reflections:0.9.12'
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'com.google.api-client:google-api-client:1.31.5'
    compile 'com.google.apis:google-api-services-youtube:v3-rev20220403-1.32.1'
    

    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')

    compile("org.springframework.boot:spring-boot-starter-thymeleaf") {
        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
    }
}

class Version {
    String major, minor, revision

    static String getBuild() {
        System.getenv("GITHUB_RUN_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?:
                System.getenv("GIT_COMMIT")?.substring(0, 7) ?: System.getProperty("GIT_COMMIT")?.substring(0, 7) ?:"DEV"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build"
    }
}
